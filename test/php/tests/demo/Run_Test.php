<?php
// Code generated by cyamli, DO NOT EDIT.

namespace Tests\demo;

use PHPUnit\Framework\TestCase;
use \Cyamli\demo\Cyamli;
use \Cyamli\demo\Input;

class Run_Test extends TestCase {
    /**
     * @dataProvider provideTestCases
     */
    public function testRun($name, $args, $wantInput) {
        $mock = new CLIHandlerMock();
        Cyamli::Run($mock, $args);
        $got = $mock->gotInput;
        $want = $wantInput;
        
        $this->assertEquals($want->Opt_Config, $got->Opt_Config, $name . ": unexpected input for option: -config");
        
        
    }

    public function provideTestCases() {
        return [
            // command-line-arguments
            [
                'command-line-arguments',
                ["", "-config=0","--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "0";
                    
                    
                    return $input;
                })(),
            ],
            // default-options
            [
                'default-options',
                ["", "--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "";
                    
                    
                    return $input;
                })(),
            ],
            // short-options
            [
                'short-options',
                ["", "-config=0","--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "0";
                    
                    
                    return $input;
                })(),
            ],
            // negated-options
            [
                'negated-options',
                ["", "-config=0","--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "0";
                    
                    
                    return $input;
                })(),
            ],
            // variadic-arguments-zero
            [
                'variadic-arguments-zero',
                ["", "-config=0","--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "0";
                    
                    
                    return $input;
                })(),
            ],
            // variadic-arguments-two
            [
                'variadic-arguments-two',
                ["", "-config=0","--",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_Config = "0";
                    
                    
                    return $input;
                })(),
            ],
        ];
    }
}

