<?php
// Code generated by cyamli, DO NOT EDIT.

namespace Tests\features;

use PHPUnit\Framework\TestCase;
use \Cyamli\features\Cyamli;
use \Cyamli\features\Input;

class Run_Test extends TestCase {
    /**
     * @dataProvider provideTestCases
     */
    public function testRun($name, $args, $wantInput) {
        $mock = new CLIHandlerMock();
        Cyamli::Run($mock, $args);
        $got = $mock->gotInput;
        $want = $wantInput;
        
        $this->assertEquals($want->Opt_NegationOption, $got->Opt_NegationOption, $name . ": unexpected input for option: -negation-option");
        
        $this->assertEquals($want->Opt_Option, $got->Opt_Option, $name . ": unexpected input for option: -option");
        
        $this->assertEquals($want->Opt_PropagationOption, $got->Opt_PropagationOption, $name . ": unexpected input for option: -propagation-option");
        
        $this->assertEquals($want->Opt_RepeatableOption, $got->Opt_RepeatableOption, $name . ": unexpected input for option: -repeatable-option");
        
        
        $this->assertEquals($want->Arg_FirstArg, $got->Arg_FirstArg, $name . ": unexpected input for argument: first_arg");
        
        $this->assertEquals($want->Arg_SecondArg, $got->Arg_SecondArg, $name . ": unexpected input for argument: second_arg");
        
        $this->assertEquals($want->Arg_ThirdArg, $got->Arg_ThirdArg, $name . ": unexpected input for argument: third_arg");
        
    }

    public function provideTestCases() {
        return [
            // command-line-arguments
            [
                'command-line-arguments',
                ["", "-negation-option=0","-option=0","-propagation-option=0","-repeatable-option=0","--","0","0","0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 0;
                    
                    $input->Opt_PropagationOption = "0";
                    
                    $input->Opt_RepeatableOption = "0";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = ["0"];
                    
                    return $input;
                })(),
            ],
            // default-options
            [
                'default-options',
                ["", "--","0","0","0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 123;
                    
                    $input->Opt_PropagationOption = "";
                    
                    $input->Opt_RepeatableOption = "";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = ["0"];
                    
                    return $input;
                })(),
            ],
            // short-options
            [
                'short-options',
                ["", "-negation-option=0","-o=0","-propagation-option=0","-repeatable-option=0","--","0","0","0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 0;
                    
                    $input->Opt_PropagationOption = "0";
                    
                    $input->Opt_RepeatableOption = "0";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = ["0"];
                    
                    return $input;
                })(),
            ],
            // negated-options
            [
                'negated-options',
                ["", "-no-negation-option=1","-option=0","-propagation-option=0","-repeatable-option=0","--","0","0","0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 0;
                    
                    $input->Opt_PropagationOption = "0";
                    
                    $input->Opt_RepeatableOption = "0";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = ["0"];
                    
                    return $input;
                })(),
            ],
            // variadic-arguments-zero
            [
                'variadic-arguments-zero',
                ["", "-no-negation-option=1","-option=0","-propagation-option=0","-repeatable-option=0","--","0","0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 0;
                    
                    $input->Opt_PropagationOption = "0";
                    
                    $input->Opt_RepeatableOption = "0";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = [];
                    
                    return $input;
                })(),
            ],
            // variadic-arguments-two
            [
                'variadic-arguments-two',
                ["", "-no-negation-option=1","-option=0","-propagation-option=0","-repeatable-option=0","--","0","0","0", "0",],
                (function() {
                    $input = new Input();
                    
                    $input->Opt_NegationOption = false;
                    
                    $input->Opt_Option = 0;
                    
                    $input->Opt_PropagationOption = "0";
                    
                    $input->Opt_RepeatableOption = "0";
                    
                    
                    $input->Arg_FirstArg = false;
                    
                    $input->Arg_SecondArg = 0;
                    
                    $input->Arg_ThirdArg = ["0", "0"];
                    
                    return $input;
                })(),
            ],
        ];
    }
}

