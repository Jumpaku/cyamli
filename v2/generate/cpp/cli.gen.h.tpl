// Code generated by {{.Generator}}, DO NOT EDIT.
#pragma once
#include <string>
#include <vector>
#include <cstdint>

namespace {{.Namespace}} {

{{range $Index, $Command := .CommandList}}
struct {{.HandlerInputType}} {
    {{range $Index, $Option := .Options -}}
    {{$Option.InputFieldType}} {{.InputFieldName}};
    {{end}}
    {{range $Index, $Argument := .Arguments -}}
    {{$Argument.InputFieldType}} {{.InputFieldName}};
    {{end}}
    std::vector<std::string> Subcommand;
    std::vector<std::string> Options;
    std::vector<std::string> Arguments;
    std::string ErrorMessage;
    void resolveInput(std::vector<std::string> const &subcommand, std::vector<std::string> const &options, std::vector<std::string> const &arguments);
};
{{end}}

std::string GetVersion();
std::string GetProgram();
std::string GetDoc(std::vector<std::string> const &subcommands);

class CLIHandler {
public:
    virtual ~CLIHandler() = default;
    {{range $Index, $Command := .CommandList -}}
    virtual void {{.HandlerMethodName}}({{.HandlerInputType}} const &input) = 0;
    {{end}}
};

void Run(CLIHandler &handler, int argc, const char *argv[]);

} // namespace
