$schema: https://json-schema.org/draft/2020-12/schema
$id: https://github.com/Jumpaku/cyamli/raw/v2.0.0-beta.2/docs/cyamli-cli.schema.json
title: cyamli CLI schema
description: CLI schema for cyamli.

$ref: '#/$defs/Program'

$defs:
  Program:
    description: |
      Program is a root command that may have a name and a version.
      It consists of commands recursively.
    allOf:
      - type: object
        properties:
          name:
            description: |
              Name of the program.
              The default value is an empty string.
            type: string
          version:
            description: |
              Version of the program.
              The default value is an empty string.
            type: string
      - $ref: '#/$defs/Command'

  Type:
    description: |
      Type represents a type of a value that can be assigned to an option or an argument.
      One of "string", "integer", or "boolean" is available.
    type: string
    enum: ["", string, integer, boolean]

  Command:
    description: |
      Command represents a root command or a subcommand of the program.
      It may have options, arguments, and subcommands recursively.
    type: object
    properties:
      description:
        description: |
          Description of the command.
          The default value is an empty string.
        type: string
      options:
        description: |
          A collection of options, which is a mapping from option names to options. 
          The default value is an empty object.
          A property name is a name of an option, which must match the regular expression `^(-[a-z][a-z0-9]*)+$` and be unique in options of the command.
        type: object
        additionalProperties:
          $ref: '#/$defs/Option'
        propertyNames:
          pattern: "^(-[a-z][a-z0-9]*)+$"
      arguments:
        description: |
          A list of arguments.
          The default value is an empty array.
        type: array
        items:
          $ref: '#/$defs/Argument'
      subcommands:
        description: |
          A collection of subcommands, which is a mapping from subcommand names to child commands.
          The default value is an empty object.
          A property name is a name of a subcommand, which must match the regular expression `^[a-z][a-z0-9]*$` and be unique in subcommands of the command.
        type: object
        additionalProperties:
          $ref: '#/$defs/Command'
        propertyNames:
          pattern: "^[a-z][a-z0-9]*$"

  Option:
    description: |
      Option represents an optional argument in command line arguments.
    type: object
    properties:
      short:
        description: |
          Short name of the option, which must match the regular expression `^-[a-z]$` and be unique in options of the command which the option belongs to.
          If short is not specified then short name for this option is not available.
        type: string
        pattern: "(^$)|(^-[a-z]$)"
      description:
        description: |
          Description of the option.
          The default value is an empty string.
        type: string
      type:
        description: |
          Type of the value that is assignable to this option.
          The default value is "string".
        $ref: '#/$defs/Type'
      negation:
        description: |
          Whether the option of typed boolean has a negated version.
          If true then the option can be specified with a negation prefix `-no` in the command line arguments.
          The default value is false.
        type: boolean
      repeated:
        description: |
          Whether the option can be specified multiple times.
          If true then the option can be specified multiple times in the command line arguments.
          The default value is false.
        type: boolean
      default:
        description: |
          String value representing the default value of the non-repeated option.
          It must be a string that can be parsed as a value of the option type.
          If not specified, the following values corresponding to the option type.
          - boolean (not repeated): "false"
          - string (not repeated): ""
          - integer (not repeated): "0"
        type: string
      propagates:
        description: |
          Whether the option propagates to subcommands.
          If true then the option is available in all subcommands of the command which the option belongs to.
          The default value is false.
        type: boolean
  Argument:
    description: |
      Argument represents a positional required argument in command line arguments.
    type: object
    properties:
      name:
        description: |
          Name of the argument, which must match the regular expression `^[a-z][a-z0-9]*$` and be unique in arguments of the command which the argument belongs to.
          This property is required.
        type: string
        pattern: "^[a-z][a-z0-9]*(_[a-z0-9]+)*$"
      description:
        description: |
          Description of the argument.
          The default value is an empty string.
        type: string
      type:
        description: |
          Type of the value that is assignable to the argument.
          The default value is "string".
        $ref: '#/$defs/Type'
      variadic:
        description: |
          Whether the argument is variadic (i.e. can have zero or more values).
          It can be true only if this argument is the last argument in the arguments of the belonging command.
          The default value is false.
        type: boolean
    required: [name]
